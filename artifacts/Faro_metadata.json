{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "wager",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "win",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "push",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "bankRank",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "playerRank",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "betRank",
						"type": "uint8"
					}
				],
				"name": "FaroPlayed",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "feeBps",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feesAccrued",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fund",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxBet",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nonce",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "betRank",
						"type": "uint8"
					}
				],
				"name": "playFaro",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "_bps",
						"type": "uint16"
					}
				],
				"name": "setFeeBps",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_max",
						"type": "uint256"
					}
				],
				"name": "setMaxBet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"title": "Faro - Minimal on-chain Faro game with rake",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Development-grade randomness; not suitable for production without VRF or commit-reveal. Game model (simplified): - Player places a wager on a rank 1..13 (Ace=1, ..., King=13). - House draws two ranks pseudo-randomly: bankRank then playerRank. - If betRank == bankRank => player loses the wager (house keeps it). - If betRank == playerRank => player wins 1:1 on the effective wager (wager minus rake). - If bankRank == playerRank (doublet) => push: refund the effective wager. - Rake: feeBps (basis points) is taken from every wager and accumulated for the house.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/Faro.sol": "Faro"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/Faro.sol": {
			"keccak256": "0x62291f9798b618e8f7dc2c0c2239b5ca78b3ae35271c02e736ab2aa281f8d05a",
			"license": "MIT",
			"urls": [
				"bzz-raw://34f5adc6a160a26f5b7ddd1f9c4ffd380925318749ede4cc79a2aa84ef34975e",
				"dweb:/ipfs/QmcXdw27aoqrwYj4JVNi9jYjHwByesYSNe4u8kPVSn6Pyz"
			]
		}
	},
	"version": 1
}